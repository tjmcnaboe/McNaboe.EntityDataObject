@page "/products"
@rendermode InteractiveAuto
@using EntityDataObjectDemo.Client.EntityObjectServices
@using Microsoft.JSInterop
@using Radzen
@using Radzen.Blazor
@using EntityDataObjectDemo.Client.Dtos
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService
@inject IProductDtoEntityService service




<PageTitle>Products</PageTitle>
<RadzenStack>
    <RadzenRow AlignItems="AlignItems.Center">
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenText Text="Object Entity Products" TextStyle="TextStyle.H3" TagName="TagName.H1" style="margin: 0"  />
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                <RadzenButton Icon="add_circle_outline" Text="Add" Click="@AddButtonClick" Variant="Variant.Flat" />
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenRow>
      <RadzenColumn SizeMD=12>
        <RadzenDataGrid @ref="grid0" LoadData="@LoadData" ColumnWidth="200px"  AllowFiltering="true" FilterMode="FilterMode.Advanced" AllowPaging="true" AllowSorting="true" ShowPagingSummary="true" PageSizeOptions=@(new int[]{5, 10, 20, 30})
            Data="@products"    TItem="ProductDto" RowSelect="@EditRow" >
            <Columns>
                <RadzenDataGridColumn TItem="ProductDto" Property="Id" Title="Id">
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="ProductDto" Property="Name" Title="Name">
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="ProductDto" Property="Description" Title="Description">
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="ProductDto" Property="Category" Title="Category">
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="ProductDto" Property="Price" Title="Price">
                </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="ProductDto" Filterable="false" Sortable="false" Width="70px" TextAlign="TextAlign.Center">
                        <Template Context="product">

                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Size="ButtonSize.Medium"
                                          Shade="Shade.Lighter" Variant="Variant.Flat"
                                          Click=@(args => GridDeleteButtonClick(args, product)) @onclick:stopPropagation="true" />
                        </Template>
                    </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>

    </RadzenColumn>
  </RadzenRow>
</RadzenStack>
@code {

    protected List<ProductDto>? products;

    protected RadzenDataGrid<ProductDto> grid0;
    protected override async Task OnInitializedAsync()
    {

        products = await service.GetAll();
    }

    protected async Task AddButtonClick(MouseEventArgs args)
    {
        await DialogService.OpenAsync<AddProduct>("Add Product", null);
        await grid0.Reload();
    }

    protected async Task EditRow(ProductDto args)
    {
        await DialogService.OpenAsync<EditProduct>("Edit Product", new Dictionary<string, object> { {"Id", args.Id} });
        await grid0.Reload();
    }

    protected async Task LoadData()
    {
        products = await service.GetAll();
    }



    protected async Task GridDeleteButtonClick(MouseEventArgs args, ProductDto product)
    {
        try
        {
            if (await DialogService.Confirm("Are you sure you want to delete this record?") == true)
            {
                await service.Delete(product.Id);
                await grid0.Reload();


            }
        }
        catch (Exception ex)
        {
            NotificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = $"Error",
                Detail = $"Unable to delete Product"
            });
        }
    }
}